<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- WARNING: Eclipse auto-generated file.
              Any modifications will be overwritten.
              To include a user specific buildfile here, simply create one in the same
              directory with the processing instruction <?eclipse.ant.import?>
              as the first entry and export the buildfile again. --><project basedir="." default="build" name="DataManager">
    <property environment="env"/>
    <property name="ECLIPSE_HOME" value="../../../../../softwares/spring-tool-suite-3.9.7.RELEASE-e4.10.0-win32-x86_64/sts-bundle/sts-3.9.7.RELEASE/"/>
    <property name="junit.output.dir" value="junit"/>
    <property name="debuglevel" value="source,lines,vars"/>
    <property name="target" value="1.8"/>
    <property name="source" value="1.8"/>
    <path id="Maven Dependencies.libraryclasspath">
        <pathelement location="C:/Users/asus/.m2/repository/org/springframework/boot/spring-boot-starter-web/1.2.1.RELEASE/spring-boot-starter-web-1.2.1.RELEASE.jar"/>
        <pathelement location="C:/Users/asus/.m2/repository/org/springframework/boot/spring-boot-starter/1.2.1.RELEASE/spring-boot-starter-1.2.1.RELEASE.jar"/>
        <pathelement location="C:/Users/asus/.m2/repository/org/springframework/boot/spring-boot/1.2.1.RELEASE/spring-boot-1.2.1.RELEASE.jar"/>
        <pathelement location="C:/Users/asus/.m2/repository/org/springframework/boot/spring-boot-autoconfigure/1.2.1.RELEASE/spring-boot-autoconfigure-1.2.1.RELEASE.jar"/>
        <pathelement location="C:/Users/asus/.m2/repository/org/springframework/boot/spring-boot-starter-logging/1.2.1.RELEASE/spring-boot-starter-logging-1.2.1.RELEASE.jar"/>
        <pathelement location="C:/Users/asus/.m2/repository/org/slf4j/jcl-over-slf4j/1.7.8/jcl-over-slf4j-1.7.8.jar"/>
        <pathelement location="C:/Users/asus/.m2/repository/org/slf4j/slf4j-api/1.7.8/slf4j-api-1.7.8.jar"/>
        <pathelement location="C:/Users/asus/.m2/repository/org/slf4j/jul-to-slf4j/1.7.8/jul-to-slf4j-1.7.8.jar"/>
        <pathelement location="C:/Users/asus/.m2/repository/org/slf4j/log4j-over-slf4j/1.7.8/log4j-over-slf4j-1.7.8.jar"/>
        <pathelement location="C:/Users/asus/.m2/repository/ch/qos/logback/logback-classic/1.1.2/logback-classic-1.1.2.jar"/>
        <pathelement location="C:/Users/asus/.m2/repository/ch/qos/logback/logback-core/1.1.2/logback-core-1.1.2.jar"/>
        <pathelement location="C:/Users/asus/.m2/repository/org/yaml/snakeyaml/1.14/snakeyaml-1.14.jar"/>
        <pathelement location="C:/Users/asus/.m2/repository/org/springframework/boot/spring-boot-starter-tomcat/1.2.1.RELEASE/spring-boot-starter-tomcat-1.2.1.RELEASE.jar"/>
        <pathelement location="C:/Users/asus/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/8.0.15/tomcat-embed-core-8.0.15.jar"/>
        <pathelement location="C:/Users/asus/.m2/repository/org/apache/tomcat/embed/tomcat-embed-el/8.0.15/tomcat-embed-el-8.0.15.jar"/>
        <pathelement location="C:/Users/asus/.m2/repository/org/apache/tomcat/embed/tomcat-embed-logging-juli/8.0.15/tomcat-embed-logging-juli-8.0.15.jar"/>
        <pathelement location="C:/Users/asus/.m2/repository/org/apache/tomcat/embed/tomcat-embed-websocket/8.0.15/tomcat-embed-websocket-8.0.15.jar"/>
        <pathelement location="C:/Users/asus/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.4.4/jackson-databind-2.4.4.jar"/>
        <pathelement location="C:/Users/asus/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.4.4/jackson-core-2.4.4.jar"/>
        <pathelement location="C:/Users/asus/.m2/repository/org/hibernate/hibernate-validator/5.1.3.Final/hibernate-validator-5.1.3.Final.jar"/>
        <pathelement location="C:/Users/asus/.m2/repository/javax/validation/validation-api/1.1.0.Final/validation-api-1.1.0.Final.jar"/>
        <pathelement location="C:/Users/asus/.m2/repository/org/jboss/logging/jboss-logging/3.1.3.GA/jboss-logging-3.1.3.GA.jar"/>
        <pathelement location="C:/Users/asus/.m2/repository/com/fasterxml/classmate/1.0.0/classmate-1.0.0.jar"/>
        <pathelement location="C:/Users/asus/.m2/repository/org/springframework/spring-core/4.1.4.RELEASE/spring-core-4.1.4.RELEASE.jar"/>
        <pathelement location="C:/Users/asus/.m2/repository/org/springframework/spring-web/4.1.4.RELEASE/spring-web-4.1.4.RELEASE.jar"/>
        <pathelement location="C:/Users/asus/.m2/repository/org/springframework/spring-aop/4.1.4.RELEASE/spring-aop-4.1.4.RELEASE.jar"/>
        <pathelement location="C:/Users/asus/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar"/>
        <pathelement location="C:/Users/asus/.m2/repository/org/springframework/spring-beans/4.1.4.RELEASE/spring-beans-4.1.4.RELEASE.jar"/>
        <pathelement location="C:/Users/asus/.m2/repository/org/springframework/spring-context/4.1.4.RELEASE/spring-context-4.1.4.RELEASE.jar"/>
        <pathelement location="C:/Users/asus/.m2/repository/org/springframework/spring-webmvc/4.1.4.RELEASE/spring-webmvc-4.1.4.RELEASE.jar"/>
        <pathelement location="C:/Users/asus/.m2/repository/org/springframework/spring-expression/4.1.4.RELEASE/spring-expression-4.1.4.RELEASE.jar"/>
        <pathelement location="C:/Users/asus/.m2/repository/commons-io/commons-io/2.4/commons-io-2.4.jar"/>
        <pathelement location="C:/Users/asus/.m2/repository/org/apache/commons/commons-lang3/3.3.2/commons-lang3-3.3.2.jar"/>
        <pathelement location="C:/Users/asus/.m2/repository/com/google/guava/guava/18.0/guava-18.0.jar"/>
        <pathelement location="C:/Users/asus/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.5.1/jackson-annotations-2.5.1.jar"/>
        <pathelement location="C:/Users/asus/.m2/repository/org/apache/httpcomponents/httpclient/4.4/httpclient-4.4.jar"/>
        <pathelement location="C:/Users/asus/.m2/repository/org/apache/httpcomponents/httpcore/4.4/httpcore-4.4.jar"/>
        <pathelement location="C:/Users/asus/.m2/repository/commons-codec/commons-codec/1.9/commons-codec-1.9.jar"/>
        <pathelement location="C:/Users/asus/.m2/repository/junit/junit/4.12/junit-4.12.jar"/>
        <pathelement location="C:/Users/asus/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar"/>
    </path>
    <path id="java-coding-task-berlin.classpath">
        <pathelement location="target/classes"/>
        <pathelement location="target/test-classes"/>
        <path refid="Maven Dependencies.libraryclasspath"/>
    </path>
    <path id="run.DataUploaderServiceImplTest.classpath">
        <path refid="java-coding-task-berlin.classpath"/>
        <path refid="Maven Dependencies.libraryclasspath"/>
    </path>
    <path id="run.DataUploadProducerTest.classpath">
        <path refid="java-coding-task-berlin.classpath"/>
        <path refid="Maven Dependencies.libraryclasspath"/>
    </path>
    <path id="run.java-coding-task-berlin.classpath">
        <path refid="java-coding-task-berlin.classpath"/>
        <path refid="Maven Dependencies.libraryclasspath"/>
    </path>
    <path id="run.UtilityTest.classpath">
        <path refid="java-coding-task-berlin.classpath"/>
        <path refid="Maven Dependencies.libraryclasspath"/>
    </path>
    <target name="init">
        <mkdir dir="target/classes"/>
        <mkdir dir="target/test-classes"/>
        <copy includeemptydirs="false" todir="target/classes">
            <fileset dir="src/main/java">
                <exclude name="**/*.launch"/>
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
        <copy includeemptydirs="false" todir="target/test-classes">
            <fileset dir="src/test/java">
                <exclude name="**/*.launch"/>
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
    </target>
    <target name="clean">
        <delete dir="target/classes"/>
        <delete dir="target/test-classes"/>
    </target>
    <target depends="clean" name="cleanall"/>
    <target depends="build-subprojects,build-project" name="build"/>
    <target name="build-subprojects"/>
    <target depends="init" name="build-project">
        <echo message="${ant.project.name}: ${ant.file}"/>
        <javac debug="true" debuglevel="${debuglevel}" destdir="target/classes" includeantruntime="false" source="${source}" target="${target}">
            <src path="src/main/java"/>
            <classpath refid="java-coding-task-berlin.classpath"/>
        </javac>
        <javac debug="true" debuglevel="${debuglevel}" destdir="target/test-classes" includeantruntime="false" source="${source}" target="${target}">
            <src path="src/test/java"/>
            <classpath refid="java-coding-task-berlin.classpath"/>
        </javac>
    </target>
    <target description="Build all projects which reference this project. Useful to propagate changes." name="build-refprojects"/>
    <target description="copy Eclipse compiler jars to ant lib directory" name="init-eclipse-compiler">
        <copy todir="${ant.library.dir}">
            <fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar"/>
        </copy>
        <unzip dest="${ant.library.dir}">
            <patternset includes="jdtCompilerAdapter.jar"/>
            <fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar"/>
        </unzip>
    </target>
    <target description="compile project with Eclipse compiler" name="build-eclipse-compiler">
        <property name="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter"/>
        <antcall target="build"/>
    </target>
    <target name="DataUploaderServiceImplTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="com.shalini.service.DataUploaderServiceImplTest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.DataUploaderServiceImplTest.classpath"/>
        </junit>
    </target>
    <target name="DataUploadProducerTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="com.shalini.service.DataUploadProducerTest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.DataUploadProducerTest.classpath"/>
        </junit>
    </target>
    <target name="java-coding-task-berlin">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="HelloWorldTest" todir="${junit.output.dir}"/>
            <test name="com.shalini.service.DataUploadProducerTest" todir="${junit.output.dir}"/>
            <test name="com.shalini.service.DataUploaderServiceImplTest" todir="${junit.output.dir}"/>
            <test name="com.shalini.service.UtilityTest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.java-coding-task-berlin.classpath"/>
        </junit>
    </target>
    <target name="UtilityTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="com.shalini.service.UtilityTest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.UtilityTest.classpath"/>
        </junit>
    </target>
    <target name="junitreport">
        <junitreport todir="${junit.output.dir}">
            <fileset dir="${junit.output.dir}">
                <include name="TEST-*.xml"/>
            </fileset>
            <report format="frames" todir="${junit.output.dir}"/>
        </junitreport>
    </target>
</project>
